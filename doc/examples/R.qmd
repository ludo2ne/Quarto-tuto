---
title: "Executed R - Example"
description: "Example of a web page with executed R code"
author: "Ludovic Deneuville"
format:
  html:
    toc: true
    toc-location: left
    toc-expand: 3 
    code-tools:
      source: true
      toggle: false
from: markdown+emoji
number-sections: true
lightbox: true
resources:
  - demo.pdf
jupyter: 
  kernelspec: 
    name: R
    display_name: R
    language: R
---


## R

To render files including R code, you have to :

- [ ] [Download and install R](https://cloud.r-project.org/){target="_blank"}
- [ ] Install required packages
  - example : `install.packages(c('rmarkdown', 'dplyr', 'ggplot2'))`

### Documentation

- [Using R with Quarto](https://quarto.org/docs/computations/r.html){target="_blank"}


## Cells

To write code cells, the principle is the same as with [Python](python.qmd#cells).

Simply replace *Python* with *R* between the braces.

### Load packages

A good practice is to load all packages at the beginning.

```{r}
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(leaflet)
```

::: {.callout-important title="Deploy on GitHub pages"}
Don't forget to add your libraries into the file called `DESCRIPTION` at the reposiroty root.

This file is essential to list all needed packages when you run GitHub actions.
:::

### First cell

Imagine you want to draw a spiral.

```{r}
#| label: fig-spiral
#| fig-cap: A wonderfull spiral
theta <- seq(0, 8 * pi, length.out = 1000)
r <- 0.5 * theta

data <- data.frame(theta = theta, r = r)
data$x <- data$r * cos(data$theta)
data$y <- data$r * sin(data$theta)

ggplot(data, aes(x, y)) +
  geom_path(color = "darkcyan", linewidth = 1.5)
```

You cannot see it in the output code but i add those options at the beginning :

```{{r}}
#| label: fig-spiral
#| fig-cap: A wonderfull spiral
theta <- seq(0, 8 * pi, length.out = 1000)
r <- 0.5 * theta
...
```

So you can use the label and reference the figure elsewhere:

- @fig-spiral with this code : `@fig-spiral`
- [my wonderfull spiral](#fig-spiral) with this code :`[my wonderfull spiral](#fig-spiral)`



## Tabulations

::: {.panel-tabset .nav-pills}

#### Code

```{r}
#| eval: false
set.seed(42)
pairs <- data.frame(x = runif(10), y = runif(10))

ggplot(pairs, aes(x, y)) +
  geom_point(color = "darkcyan", alpha = 0.7) +
  labs(x = "X", y = "Y")
```
  
#### Plot

```{r}
#| echo: false
set.seed(42)
pairs <- data.frame(x = runif(10), y = runif(10))

ggplot(pairs, aes(x, y)) +
  geom_point(color = "darkcyan", size = 3)
```


#### Data

```{r}
knitr::kable(pairs)
```
:::




## Inline code

You can display variable values in text.

```{r}
ages <- c(20, 25, 30, 40)
```

The average age is **`r mean(ages)`**.


## Interactive Maps

You can include maps using library [Leaflet](https://leafletjs.com/){target="_blank"}.

```{r}
leaflet() %>%
  setView(lng=2.6, lat=46.5, zoom=5) %>%
  addTiles() %>%  
  addMarkers(lng=-1.7419, lat=48.0507, popup="ENSAI")
```
